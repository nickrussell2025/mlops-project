# .env.template - Copy and customize for your deployment
# 1. Copy: cp .env.template .env.cloud
# 2. Replace all <YOUR_*> placeholders with your values
# 3. Run: make setup-environment

# ===== REQUIRED: REPLACE THESE WITH YOUR VALUES =====
GOOGLE_CLOUD_PROJECT=<YOUR_GCP_PROJECT_ID>
GOOGLE_CLOUD_REGION=<YOUR_REGION>  # e.g., europe-west2, us-central1

# Database password - change this!
DATABASE_PASSWORD=<YOUR_SECURE_PASSWORD>

# ===== AUTO-GENERATED URLs (updated by setup script) =====
# These will be populated automatically based on your project
PREFECT_API_URL=https://prefect-server-<HASH>-<REGION_CODE>.a.run.app/api
MLFLOW_TRACKING_URI=https://mlflow-working-<PROJECT_NUMBER>.<REGION>.run.app
MODEL_API_URL=https://model-api-<PROJECT_NUMBER>.<REGION>.run.app
GRAFANA_URL=https://grafana-monitoring-<HASH>-<REGION_CODE>.a.run.app

# ===== DERIVED VALUES (auto-calculated) =====
DATABASE_HOST=<CLOUD_SQL_IP>  # Found via: gcloud sql instances describe mlflow-db
DATABASE_URL=postgresql://postgres:${DATABASE_PASSWORD}@${DATABASE_HOST}:5432/monitoring
MLFLOW_BACKEND_STORE_URI=postgresql://postgres:${DATABASE_PASSWORD}@${DATABASE_HOST}:5432/mlflow
MLFLOW_DEFAULT_ARTIFACT_ROOT=gs://${GOOGLE_CLOUD_PROJECT}-mlflow-artifacts
SERVICE_ACCOUNT_EMAIL=mlops-cloud-run-sa@${GOOGLE_CLOUD_PROJECT}.iam.gserviceaccount.com

# ===== CONTAINER REGISTRY =====
CONTAINER_REGISTRY=${GOOGLE_CLOUD_REGION}-docker.pkg.dev
REPOSITORY_NAME=mlops-repo
TRAINING_IMAGE=${CONTAINER_REGISTRY}/${GOOGLE_CLOUD_PROJECT}/${REPOSITORY_NAME}/training-pipeline:latest

# ===== STATIC CONFIGURATION =====
DATABASE_PORT=5432
DATABASE_USER=postgres
PREFECT_PROFILE=gcp-server
WORK_POOL_NAME=cloud-run-jobs
WORK_POOL_TYPE=cloud-run-v2
GRAFANA_ADMIN_USER=admin

# ===== OPTIONAL CUSTOMIZATION =====
# GitHub repository (update if you fork the project)
GITHUB_REPO_URL=https://github.com/<YOUR_USERNAME>/mlops-project.git

# Resource allocation (adjust for your needs)
PREFECT_SERVER_MEMORY=2Gi
MODEL_API_MEMORY=2Gi
TRAINING_JOB_MEMORY=2Gi

# ===== COMMANDS TO GENERATE YOUR CONFIGURATION =====
# 1. Get your GCP project ID:
#    gcloud config get-value project

# 2. Choose your region:
#    gcloud compute regions list

# 3. Generate a secure password:
#    openssl rand -base64 32

# 4. After running terraform apply, get service URLs:
#    make get-service-urls

# 5. Populate all values automatically:
#    make setup-environment